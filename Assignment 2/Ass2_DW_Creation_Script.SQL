
------------------------------------
/*Team : Joshua and Monroy

Joshua Rauert Student # 101621758
Monroy Managuit Student # 100059714 

Pass Level Task - DATA WAREHOUSE SETUP
	  
*/	  
---------------------------------------

/* Task 1.1 */

DROP TABLE A2ERROREVENT;
 
 
CREATE TABLE A2ERROREVENT
(
ERRORID INTEGER,
SOURCE_ROWID ROWID,
SOURCE_TABLE VARCHAR2(30),
FILTERID INTEGER,
DATETIME DATE,
ACTION VARCHAR2(6),
CONSTRAINT ERROREVENTACTION
CHECK ( ACTION IN ('SKIP','MODIFY') )
);


CREATE SEQUENCE A2ERROR_SEQ;

/

/* Task 1.2 */

DROP TABLE DWPROD;
DROP TABLE DWCUST;
DROP TABLE DWSALE;

CREATE TABLE DWPROD
(
DWPRODID INTEGER,
DWSOURCETABLE VARCHAR2(40),
DWSOURCEID INTEGER,
PRODNAME VARCHAR2(110),
PRODCATNAME VARCHAR2(40),
PRODMANUNAME VARCHAR2(40),
PRODSHIPNAME VARCHAR2(40)
);
   
  
  CREATE TABLE DWCUST
(
DWCUSTID INTEGER,
DWSOURCEIDBRIS NUMBER,
DWSOURCEIDMELB NUMBER,
FIRSTNAME VARCHAR2(40),
SURNAME VARCHAR2(40),
GENDER VARCHAR2(10),
PHONE VARCHAR2(20),
POSTCODE NUMBER(4),
CITY VARCHAR2(60),
STATE VARCHAR(3),
CUSTCATNAME VARCHAR2(40)
);
  
 
 CREATE TABLE DWSALE
(
DWSALEID INTEGER,
DWCUSTID INTEGER,
DWPRODID INTEGER,
DWSOURCEIDBRIS INTEGER,
DWSOURCEIDMELB INTEGER,
QTY NUMBER(5),
SALE_DWDATEID INTEGER,
SHIP_DWDATEID INTEGER,
SALEPRICE NUMBER
);
 
CREATE SEQUENCE DWPROD_SEQ;
CREATE SEQUENCE DWCUST_SEQ;
CREATE SEQUENCE DWSALE_SEQ;
 
 
/
  
/* Task 1.3 */  
  
DROP TABLE GENDERSPELLING;  
  
  
CREATE TABLE GENDERSPELLING
(
Invalid_Value varchar(15),
New_Value varchar(1)
);
 
INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('MAIL', 'M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('WOMAN', 'F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('FEM', 'F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('FEMALE', 'F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('MALE', 'M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('GENTLEMAN', 'M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('MM', 'M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('FF', 'F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value) 
VALUES ('FEMAIL', 'F');
 

 /
 
 /* Part 2 : 2.1 Task Filter #1 */
 
 
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, FILTERID, DATETIME, ACTION)  
 
			Select A2ERROR_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 1, CURRENT_DATE, 'SKIP'
			From   A2PRODUCT pr
			Where   pr.PRODNAME IS NULL;
 
			Select * From A2ERROREVENT;
 
 /
 
  /* Part 2 : 2.2 Task Filter # 2 */
  
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, FILTERID, DATETIME, ACTION)  
      
			Select  A2ERROR_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 2, CURRENT_DATE, 'MODIFY'
			From    A2PRODUCT pr
			Where   pr.MANUFACTURERCODE IS NULL;
 
			Select * From A2ERROREVENT;
 
 /
 
   /* Part 2 : 2.3 Task Filter # 2 */
   
 INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, FILTERID, DATETIME, ACTION)  
 
			Select  A2ERROR_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 3, CURRENT_DATE, 'MODIFY'
			From    A2PRODUCT pr
			Where   ( pr.PRODCATEGORY IS NULL ) OR pr.PRODCATEGORY NOT IN
                    ( SELECT mn.PRODUCTCATEGORY FROM A2PRODCATEGORY mn );
 
			Select * From A2ERROREVENT;
			
			
/
   /* Part 2 : 2.4.3 Task  */
   
INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)

			Select          DWPROD_SEQ.NEXTVAL,'A2PRODUCT',pr.PRODID,pr.PRODNAME,
			
                        ( SELECT prc.CATEGORYNAME FROM A2PRODCATEGORY prc WHERE prc.PRODUCTCATEGORY = pr.PRODCATEGORY ),
							( SELECT mn.MANUNAME FROM A2MANUFACTURER mn WHERE mn.MANUCODE = pr.MANUFACTURERCODE ),
								( SELECT sh.DESCRIPTION FROM A2SHIPPING sh WHERE sh.SHIPPINGCODE = pr.SHIPPINGCODE )  
								
			From            A2PRODUCT pr
			Where           pr.ROWID NOT IN
                            ( SELECT SOURCE_ROWID FROM A2ERROREVENT ); 
							
                           
			Select * From DWPROD;
 
 /
   /* Part 2 : 2.4.4 Task  */

INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)

			Select          DWPROD_SEQ.NEXTVAL,'A2PRODUCT',pr.PRODID,pr.PRODNAME,
			
                        ( SELECT prc.CATEGORYNAME FROM A2PRODCATEGORY prc WHERE prc.PRODUCTCATEGORY = pr.PRODCATEGORY ),
							( SELECT mn.MANUNAME FROM A2MANUFACTURER mn WHERE mn.MANUCODE = pr.MANUFACTURERCODE ),
								( SELECT sh.DESCRIPTION FROM A2SHIPPING sh WHERE sh.SHIPPINGCODE = pr.SHIPPINGCODE )  
								
			From            A2PRODUCT pr

			Where           pr.ROWID IN
                            ( SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 2); 
							
            UPDATE DWPROD
            SET PRODMANUNAME = 'UNKNOWN'   
            WHERE ROWID IN( SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 2);

/
   /* Part 2 : 2.4.5 Task  */

INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)

			Select          DWPROD_SEQ.NEXTVAL,'A2PRODUCT',pr.PRODID,pr.PRODNAME,
			
                        ( SELECT prc.CATEGORYNAME FROM A2PRODCATEGORY prc WHERE prc.PRODUCTCATEGORY = pr.PRODCATEGORY ),
							( SELECT mn.MANUNAME FROM A2MANUFACTURER mn WHERE mn.MANUCODE = pr.MANUFACTURERCODE ),
								( SELECT sh.DESCRIPTION FROM A2SHIPPING sh WHERE sh.SHIPPINGCODE = pr.SHIPPINGCODE )  
								
			From            A2PRODUCT pr

			Where           pr.ROWID IN
                            ( SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 3); 
							
            UPDATE DWPROD
            SET PRODCATNAME = 'UKNOWN'
            WHERE ROWID IN ( SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 3); 


/
   /* Part 3 : 3.1 Task  */

INSERT INTO A2ERROREVENT (ERRORid, source_rowid, source_table, filterid, datetime, action)
    SELECT A2ERROR_SEQ.NEXTVAL, ROWID, 'A2CUSTBRIS', 4, CURRENT_DATE, 'MODIFY'
    FROM A2CUSTBRIS U
    WHERE NOT EXISTS (SELECT 1 FROM A2CUSTCATEGORY Y WHERE U.CustCATCode = Y.CustCATCode);


/
   /* Part 3 : 3.2 Task  */

INSERT INTO A2ERROREVENT (ERRORid, source_rowid, source_table, filterid, datetime, action)
    SELECT A2ERROR_SEQ.NEXTVAL, ROWID, 'A2CUSTBRIS', 5, CURRENT_DATE, 'MODIFY'
    FROM A2CUSTBRIS
    WHERE PHONE LIKE '%-%' OR PHONE LIKE '% %'; 


/
   /* Part 3 : 3.3 Task  */

INSERT INTO A2ERROREVENT (ERRORid, source_rowid, source_table, filterid, datetime, action)
    SELECT A2ERROR_SEQ.NEXTVAL, ROWID, 'A2CUSTBRIS', 6, CURRENT_DATE, 'SKIP'
    FROM A2CUSTBRIS
    WHERE PHONE NOT LIKE '%-%' AND PHONE NOT LIKE '% %' AND LENGTH(PHONE) != 10;



/
   /* Part 3 : 3.4 Task  */

INSERT INTO A2ERROREVENT (ERRORid, source_rowid, source_table, filterid, datetime, action)
    SELECT A2ERROR_SEQ.NEXTVAL, ROWID, 'A2CUSTBRIS', 7, CURRENT_DATE, 'SKIP'
    FROM A2CUSTBRIS
    WHERE GENDER NOT IN ('M', 'F','m', 'f') OR GENDER IS NULL;


/
   /* Part 3 : 3.5.1 Task  */

INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL, pr.CUSTID, 
(SELECT cm.CUSTID FROM A2CUSTMELB cm WHERE cm.CUSTID = pr.CUSTID),
pr.FNAME, pr.SNAME, UPPER(pr.GENDER), pr.PHONE, pr.POSTCODE, pr.CITY, pr.STATE,
(SELECT cc.CUSTCATNAME FROM A2CUSTCATEGORY cc WHERE cc.CUSTCATCODE = pr.CUSTCATCODE)
FROM A2CUSTBRIS pr
WHERE pr.ROWID NOT IN
(SELECT SOURCE_ROWID FROM A2ERROREVENT);


/
   /* Part 3 : 3.5.2 Task  */

INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL, pr.CUSTID, 
(SELECT cm.CUSTID FROM A2CUSTMELB cm WHERE cm.CUSTID = pr.CUSTID),
pr.FNAME, pr.SNAME, UPPER(pr.GENDER), pr.PHONE, pr.POSTCODE, pr.CITY, pr.STATE,
'UNKNOWN'
FROM A2CUSTBRIS pr, A2ERROREVENT AY
WHERE pr.ROWID IN
(SELECT SOURCE_ROWID FROM A2ERROREVENT) AND AY.FILTERID = 4;


/
   /* Part 3 : 3.5.3 Task  */

INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL, pr.CUSTID, 
(SELECT cm.CUSTID FROM A2CUSTMELB cm WHERE cm.CUSTID = pr.CUSTID),
pr.FNAME, pr.SNAME, UPPER(pr.GENDER), replace(replace(pr.PHONE,'-',''),' ',''), pr.POSTCODE, pr.CITY, pr.STATE,
(SELECT cc.CUSTCATNAME FROM A2CUSTCATEGORY cc WHERE cc.CUSTCATCODE = pr.CUSTCATCODE)
FROM A2CUSTBRIS pr, A2ERROREVENT AY
WHERE pr.ROWID IN
(SELECT SOURCE_ROWID FROM A2ERROREVENT) AND AY.FILTERID = 5;


/
   /* Part 3 : 3.5.4 Task  */

INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL, pr.CUSTID, 
(SELECT cm.CUSTID FROM A2CUSTMELB cm WHERE cm.CUSTID = pr.CUSTID),
pr.FNAME, pr.SNAME, UPPER(pr.GENDER), replace(replace(pr.PHONE,'-',''),' ',''), pr.POSTCODE, pr.CITY, pr.STATE,
(SELECT cc.CUSTCATNAME FROM A2CUSTCATEGORY cc WHERE cc.CUSTCATCODE = pr.CUSTCATCODE)
FROM A2CUSTBRIS pr, A2ERROREVENT AY
WHERE pr.ROWID IN
(SELECT SOURCE_ROWID FROM A2ERROREVENT) AND AY.FILTERID = 7;

UPDATE DWCUST DW
SET GENDER = (SELECT NEW_VALUE FROM GENDERSPELLING GS
              WHERE DW.GENDER = GS.INVALID_VALUE)
WHERE GENDER NOT IN ('M', 'F');

/
